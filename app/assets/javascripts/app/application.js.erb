var width = 960,
        height = 500,
        centered;

var projection = d3.geo.mercator()
//CAPITAL FEDERAL:: TODO usar albans
    /*.scale(600000)
     .translate([-11000, 96100 ]);*/

        .scale(4000)
        .translate([500, -500 ]);


var path = d3.geo.path()
        .projection(projection);

var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height);

svg.append("rect")
        .attr("class", "background")
        .attr("width", width)
        .attr("height", height)
        .on("click", click);

var g = svg.append("g")
        .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
        .append("g")
        .attr("id", "states");

<% url = MapaD3::Application.routes.url_helpers %>

d3.json('<%= url.pais_path %>', function(json) {
    g.selectAll("path")
            .data(json.features)
            .enter().append("path")
            .attr("d", path)
            .on("click", click);
});

function click(d) {
    var x = 0,
            y = 0,
            k = 1;

    if (d && centered !== d) {
        var centroid = path.centroid(d);
        x = -centroid[0];
        y = -centroid[1];
        k = 4;
        centered = d;
    } else {
        centered = null;
    }

    g.selectAll("path")
            .classed("active", centered && function(d) { return d === centered; });

    g.transition()
            .duration(1000)
            .attr("transform", "scale(" + k + ")translate(" + x + "," + y + ")")
            .style("stroke-width", 1.5 / k + "px");
}











/*

 var xym = d3.geo.mercator();
 var path = d3.geo.path().projection(xym);

 var defScale = 60000;
 var defTrans = [34, 58];


 // the variable that holds our translate, centers on the netherlands
 //var translate = xym.translate();
 //translate[0] = -500;
 //translate[1] = 10640

 // center on the netherlands and zoom all the way in
 //xym.translate(translate);
 //xym.scale(60000);

 var svg = d3.select("#chart")
 .append("svg")
 .attr("width", 960)
 .attr("height", 500)
 .call(d3.behavior.zoom().on("zoom", redraw));

 var gemeentes = svg.append("g")
 .attr("id", "gemeentes")
 .attr("class", "RdYlGn");

 d3.json("comunas.json", function (json) {
 gemeentes.selectAll("path")   // select all the current path nodes
 .data(json.features)      // bind these to the features array in json
 .enter().append("path")   // if not enough elements create a new path
 .attr("class", 'quantize')  // add attribute class and fill with result from quantize
 .attr("id", 'named')
 .attr("d", path)          // transform the supplied jason geo path to svg
 });



 function redraw() {
 console.log("redraw scale",d3.event.scale * defScale);
 xym.scale(d3.event.scale * defScale);
 var xTrans = d3.event.translate[0] + defTrans[0];
 var yTrans = d3.event.translate[1] + defTrans[1];
 console.log("redraw x",xTrans);
 console.log("redraw y",yTrans);
 xym.translate([xTrans, yTrans]);
 gemeentes.selectAll("path")
 .attr("d", path);
 }                                                              */