<% url = Parcelas::Application.routes.url_helpers %>

var Map = function(){

    var comunaClickedHandler,
        comunaTransitionEnded,
        comunasEndpoint;

    var canvasWidth = 960,
        canvasHeight = 500,
        centered;

    var comunasScale =  600000,
            comunasTranslate = [-11000, 96100 ];

    comunasEndpoint = function (){
        return '<%= url.comunas_all_path() %>';
    }

    comunaTransitionEnded = function (node){
        Sidebar.populateBarrio(node.properties);
    }

    comunaClickedHandler = function(node, path, g){
            var x = 0,
                    y = 0,
                    k = 1;

            if (node && centered !== node) {
                var centroid = path.centroid(node);
                x = -centroid[0];
                y = -centroid[1];
                k = 4;
                centered = node;
            } else {
                centered = null;
            }

            g.selectAll("path")
                    .classed("active", centered && function(node) { return node === centered; });

            g.transition()
                    .duration(1000)
                    .attr("transform", "scale(" + k + ")translate(" + x + "," + y + ")")
                    .style("stroke-width", 1.5 / k + "px")
                    .each("end", function(){ comunaTransitionEnded(node) });
    }

    getGeoAddress = function(address, callback){
        geocoder = new google.maps.Geocoder();

        geocoder.geocode( { 'address': address}, function(results, status) {
            callback(results[0].geometry.location);
        });
    }

    doDrawComunasOverGoogleMap = function(center, geoJson){
        var $map = $("#map");
        var map = new google.maps.Map($map[0], {
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            center: center,
            styles:[{"stylers": [{"saturation": -75},{"lightness": 75}]}]
        });

        var overlay = new google.maps.OverlayView();
        overlay.onAdd = function () {

            var layer = d3.select(this.getPanes().overlayLayer).append("div").attr("class", "SvgOverlay");
            var svg = layer.append("svg");
            var adminDivisions = svg.append("g").attr("class", "AdminDivisions");

            overlay.draw = function () {
                var markerOverlay = this;
                var overlayProjection = markerOverlay.getProjection();

                // Turn the overlay projection into a d3 projection
                var googleMapProjection = function (coordinates) {
                    var googleCoordinates = new google.maps.LatLng(coordinates[1], coordinates[0]);
                    var pixelCoordinates = overlayProjection.fromLatLngToDivPixel(googleCoordinates);
                    return [pixelCoordinates.x, pixelCoordinates.y];
                }

                path = d3.geo.path().projection(googleMapProjection);
                adminDivisions.selectAll("path")
                        .data(geoJson.features)
                        .attr("d", path) // update existing paths
                        .enter().append("svg:path")
                        .attr("d", path);
            };
        };

        overlay.setMap(map);
    }

    return {

         drawComunasOverGoogleMap : function(){
             $.getJSON(comunasEndpoint(), function(data){
                 getGeoAddress("Buenos Aires", function(center) {
                    doDrawComunasOverGoogleMap(center, data);
                })
             });
         },

         drawComunas : function() {

             var projection = d3.geo.mercator()
                     .scale(comunasScale)
                     .translate(comunasTranslate);


             var path = d3.geo.path()
                     .projection(projection);

             var svg = d3.select("#chart").append("svg")
                     .attr("width", canvasWidth)
                     .attr("height", canvasHeight);

             svg.append("rect")
                     .attr("class", "background")
                     .attr("width", canvasWidth)
                     .attr("height", canvasHeight)
                     .on("click", comunaClickedHandler);

             var g = svg.append("g")
                     .attr("transform", "translate(" + canvasWidth / 2 + "," + canvasHeight / 2 + ")")
                     .append("g")
                     .attr("id", "states");

             d3.json(comunasEndpoint(), function(json) {
                 g.selectAll("path")
                         .data(json.features)
                         .enter().append("path")
                         .attr("d", path)
                         .on("click", function(d){ comunaClickedHandler(d, path, g) });
             });
         },

         drawParcelas : function(){
             var canvasWidth = 960,
                     canvasHeight = 500,
                     centered;

             var comunasScale =  6000000,
                     comunasTranslate = [972500, -615500 ];
         },

         drawSeccion : function() {
         }
    };
}();