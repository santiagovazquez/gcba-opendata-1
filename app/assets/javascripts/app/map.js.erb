<% url = Parcelas::Application.routes.url_helpers %>

var Map = function(){

    var buenosAiresLocation;

    var parcelasEndpoint,
        getGeoAddress,
        doDrawParcelasOverGoogleMap,
        drawParcelasOverGoogleMap,
        parcelaClicked,
        mapViewPortChanged;

    var canvasWidth = 960,
        canvasHeight = 500,
        centered;

    var clickedElement;

    var idleSkipped = false,
        isMapDragging = false;

    var getIdleSkipped,
        setIdleSkipped,
        getIsMapDragging,
        setIsMapDragging,
        getMapCenter,
        setMapCenter;

    parcelasEndpoint = function(){
       return '<%= url.secciones_json_path(:seccion => '019') %>';
    }

    getGeoAddress = function(address, callback){
        var geocoder = new google.maps.Geocoder();

        geocoder.geocode( { 'address': address}, function(results, status) {
            callback(results[0].geometry.location);
        });
    }

    drawParcelasOverGoogleMap = function(center){
        $.getJSON(parcelasEndpoint(), function(data){
            doDrawParcelasOverGoogleMap(center, data);
        });
    }

    parcelaClicked = function(parcela, e, s){
        if(typeof(clickedElement) !== 'undefined' && clickedElement != null){
            clickedElement.style("stroke", "orange");
            clickedElement.style("fill", "orange");
        }

        clickedElement = d3.select(this);

        clickedElement.style("stroke", "blue");
        clickedElement.style("fill", "blue");

        Sidebar.displayParcela(parcela);
    }

    doDrawParcelasOverGoogleMap = function(center, geoJson){
        var $map = $("#map");
        var that = this;

        var map = new google.maps.Map($map[0], {
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            center: center,
            styles:[{"stylers": [{"saturation": -75},{"lightness": 75}]}]
        });

        var overlay = new google.maps.OverlayView();
        overlay.onAdd = function () {

            var layer = d3.select(this.getPanes().overlayMouseTarget).append("div").attr("class", "SvgOverlay");
            var svg = layer.append("svg");
            var adminDivisions = svg.append("g").attr("class", "AdminDivisions");


            overlay.draw = function () {
                var markerOverlay = this;
                var overlayProjection = markerOverlay.getProjection();

                // Turn the overlay projection into a d3 projection
                var googleMapProjection = function (coordinates) {
                    var googleCoordinates = new google.maps.LatLng(coordinates[1] + 0.0005, coordinates[0] - 0.0006);
                    var pixelCoordinates = overlayProjection.fromLatLngToDivPixel(googleCoordinates);
                    return [pixelCoordinates.x + 4000, pixelCoordinates.y + 4000];
                }

                path = d3.geo.path().projection(googleMapProjection);
                adminDivisions.selectAll("path")
                        .data(geoJson.features)
                        .attr("d", path) // update existing paths
                        .enter().append("svg:path")
                        .attr("d", path)
                        .on("click", parcelaClicked);

                google.maps.event.addDomListener(document.getElementsByTagName("path"), 'click', function() {
                    google.maps.event.trigger(me, 'click');
                });

            };
        };

        google.maps.event.addListener(map, 'idle', function() {
            if (getIsMapDragging()) {
                setIdleSkipped(true);
                return;
            }

            setIdleSkipped(false);
            mapViewPortChanged(map);
        });

        google.maps.event.addListener(map, 'dragstart', function() {
            setIsMapDragging(true);
        });

        google.maps.event.addListener(map, 'dragend', function() {
            setIsMapDragging(false);
            if (getIdleSkipped() == true) {

                mapViewPortChanged(map);
                setIdleSkipped(false);
            }
        });

        google.maps.event.addListener(map, 'bounds_changed', function() {
            setIdleSkipped(false);
        });


        overlay.setMap(map);

        $("#loading").hide();
    }

    mapViewPortChanged = function(map){
        var centerLatLong = map.getCenter();
        var zoomLevel = map.getZoom();

        // TODO query the respective controller method
    };

    getIdleSkipped = function(){
        return idleSkipped;
    }

    setIdleSkipped = function(value){
        idleSkipped = value;
    }

    getIsMapDragging = function(){
        return isMapDragging;
    }

    setIsMapDragging = function(value){
        isMapDragging = value;
    }

    getMapCenter = function(){
        return buenosAiresLocation;
    }

    setMapCenter = function(center){
        buenosAiresLocation = center;
    }


    return {
        init : function(){
            var that = this;
            getGeoAddress("Buenos Aires", function(center){
                setMapCenter(center);
                drawParcelasOverGoogleMap(center);
            });
        },

         drawOverGoogleMap : function(geoJson){
            doDrawParcelasOverGoogleMap(getMapCenter(), geoJson);
         }
    };
}();